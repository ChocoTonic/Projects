{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf760
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 var G = 1;\
\
var Mover = function(m, x, y) \{\
    this.mass = m;\
    this.position = new PVector(x, y);\
    this.velocity = new PVector(0, 0);\
    this.acceleration = new PVector(0, 0);\
\};\
  \
Mover.prototype.applyForce = function(force) \{\
    var f = PVector.div(force, this.mass);\
    this.acceleration.add(f);\
\};\
  \
Mover.prototype.update = function() \{\
    this.velocity.add(this.acceleration);\
    this.position.add(this.velocity);\
    this.acceleration.mult(0);\
\};\
\
Mover.prototype.display = function() \{\
    stroke(0);\
    strokeWeight(2);\
    fill(255, 255, 255, 127);\
    ellipse(this.position.x, this.position.y, this.mass*16, this.mass*16);\
\};\
\
Mover.prototype.calculateAttraction = function(m) \{\
    var force = PVector.sub(this.position, m.position);\
    var distance = force.mag();\
    distance = constrain(distance, 5.0, 25.0);\
    force.normalize();\
    var strength = (G * this.mass * m.mass * -1) / (distance * distance);\
    force.mult(strength);\
    return force;\
\};\
\
\
var movers = [];\
for (var i = 0; i < 5; i++) \{\
    movers[i] = new Mover(random(0.1, 2), random(width), random(height));\
\}\
\
draw = function() \{\
    background(50, 50, 50);\
\
    for (var i = 0; i < movers.length; i++) \{\
        for (var j = 0; j < movers.length; j++) \{\
            if (i !== j) \{\
                var force = movers[j].calculateAttraction(movers[i]);\
                movers[i].applyForce(force);\
            \}\
        \}\
\
        movers[i].update();\
        movers[i].display();\
    \}\
\};\
}