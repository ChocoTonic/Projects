{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf760
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 angleMode = "radians";\
\
var Boulder = function(m, x, y) \{\
    this.position = new PVector(x, y);\
    this.mass = m;\
    this.width = this.mass * 10;\
    this.angle = 0;\
    this.aVelocity = 0;\
    this.aAcceleration = 0;\
    \
    this.velocity = new PVector(0, 0);\
    this.acceleration = new PVector(0, 0);\
\};\
\
Boulder.prototype.applyForce = function(force) \{\
    if (force instanceof PVector) \{\
        var f = PVector.div(force, this.mass);\
        this.acceleration.add(f);\
    \}\
\};\
\
Boulder.prototype.update = function () \{\
    this.velocity.add(this.acceleration);\
    this.position.add(this.velocity);\
    \
    this.aAcceleration = this.acceleration.mag();\
    this.aVelocity += this.aAcceleration;\
    this.aVelocity = constrain(this.aVelocity, 0 ,0.1);\
    this.angle += this.aVelocity;\
    \
    this.aAcceleration = 0;\
    this.acceleration.mult(0);\
\};\
\
Boulder.prototype.display = function () \{\
    pushMatrix();\
    translate(this.position.x, this.position.y);\
    image(getImage("creatures/Hopper-Jumping"), this.width*0.25, this.width*0.3, 45, 55);\
    rotate(this.angle);\
    this.drawShape();\
    popMatrix();\
\};\
\
Boulder.prototype.drawShape = function() \{\
    ellipseMode(CENTER);\
    fill(82, 82, 82);\
    ellipse(0, 0, this.width, this.width);\
    noStroke();\
    var from = color(102, 102, 102, 40);\
    var to = color(148, 148, 148, 40);\
    var gradientBars = 20;\
    for (var i = 0; i < gradientBars; i++) \{\
        var interA = lerpColor(from, to, i*1/gradientBars);\
        var sWidth = (gradientBars-i)*this.width/gradientBars;\
        fill(interA);\
        ellipse(i, 0, sWidth, sWidth);\
    \}\
    var from = color(102, 102, 102, 40);\
    var to = color(94, 94, 94, 40);\
    var gradientBars = 20;\
    for (var i = 0; i < gradientBars; i++) \{\
        var interA = lerpColor(from, to, i*1/gradientBars);\
        var sWidth = (gradientBars-i)*this.width/gradientBars;\
        fill(interA);\
        ellipse(-i, 0, sWidth, sWidth);\
    \}\
\};\
\
var boulder = new Boulder(6, 10, 10);\
var gravity = new PVector(0.5,0.5);\
var push = new PVector(-0.8,-0.8);\
\
draw = function() \{\
    background(215, 245, 245);\
    \
    if (mouseIsPressed)\{\
        boulder.applyForce(push);\
    \}\
    \
    boulder.applyForce(gravity);\
    // draw mountain\
    fill(181, 181, 181);\
    stroke(150, 150, 150);\
    triangle(0, 40, width-40, height, 0, height);\
    \
    // draw boulder\
    boulder.update();\
    boulder.display();\
\};\
}